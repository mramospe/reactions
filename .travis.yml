dist: xenial
language: python

os: linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - cmake
env:
  - CC=gcc-7 CXX=g++-7

before_install:
  - ${CC} --version
  - ${CXX} --version
  - cmake --version
  - pip install --force-reinstall -r test/python/requirements.txt

install:
   - mkdir build
   - cd build
   - cmake ../ -DINSTALL_TESTS=ON -DCMAKE_CXX_COMPILER=${CXX}
   - make install
   - cd ..

jobs:
  include:
    - name: cpp
      script:
         - ./build/test/test_elements
         - ./build/test/test_database
         - ./build/test/test_processes
      after_success: " "
    - name: cmake
      script:
      - mkdir test/cmake/build
      - cd test/cmake/build
      - CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:../../../build cmake ../ -DCMAKE_CXX_COMPILER=${CXX}
      - make
      - ./main
      after_success: " "
    - name: format
      python: 3.7
      install: " "
      script:
      - python setup.py check_format --regex '(include|python|test|docs|scripts)'
      - python setup.py check_pyflakes --regex '(python|test|docs|scripts)'
    - name: module
      python: 3.7
      install: pip install .
      script:
      - python -m reactions print-table
      - python -m reactions check-syntax --decays 'A -> B C' --reactions 'A B -> C D' --kind string
    - name: python 3.7
      python: 3.7
      install: pip install .
      script: pytest
      after_success: codecov
    - name: python 3.8
      python: 3.8
      install: pip install .
      script: pytest
      after_success: codecov
    - name: deploy
      if: branch = devel
      python: 3.7
      before_deploy:
        # Set up git user name and tag this commit
        - git config --local user.name "Miguel Ramos Pernas"
        - git config --local user.email "miguel.ramos.pernas@gmail.com"
        - export PYTHONPATH=${PYTHONPATH}:python
        - export GIT_NEW_TAG=$(python -c "import reactions; print(reactions.__version__)")
        - export GIT_LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        - if [[ -z ${GIT_NEW_TAG} || -z ${GIT_LATEST_TAG} ]]; then exit 1; fi
        - git tag ${GIT_NEW_TAG}
        - sudo apt-get update
        - sudo apt-get install -y ruby
        - ruby --version
        - gem install github_changelog_generator
        - ./repository changelog -o changes-${GIT_NEW_TAG}.md --since-tag ${GIT_LATEST_TAG}
      before_install: " "
      install: " "
      script: " "
      deploy:
        on:
          branch: devel
        provider: releases
        token: ${GITHUB_TOKEN}
        file: changes-${GIT_NEW_TAG}.md
        cleanup: false
        draft: true
